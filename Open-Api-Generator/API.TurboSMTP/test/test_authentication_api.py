# coding: utf-8

"""
    TurboSMTP Public APIs

    This document describes all public turboSMTP **V2** API and offers endpoints Descriptions, Parameters, Requests, Responses and Samples of usage.  [Click here to view the previous version of turboSMTP Public API Version 1.0](https://www.serversmtp.com/turbo-api-1)   # Security For the most part (and where not otherwise explicit) turboSMTP’s API requires Authorization.   Authorization to access a user’s resource is granted to clients provided they set  authentication headers into their request, valued with the proper values issued by turboSMTP servers.  ## *  Authorization via ConsumerKey/ConsumerSecret  This type of authorization consists of a pair of headers, named consumerKey and consumerSecret that are created and granted to the end user to be used in a permanent way (unless they´re deleted of course). This kind of authentication is intended to provide access to endpoints features without the need of providing the user the account details (email address + password).  *consumerKey:* Consumer Key Granted.  *consumerSecret:* Consumer Secret Granted.  (Use [/consumerKeys/create](#/consumerkey/createConsumerKey) create a consumer key/secret pair).      ## *  Authorization via Authentication Key  The authentication key is user-based and it is issued by turboSMTP servers upon successful user’s email address + password challenge, performed by means of appropriate request.      *Authorization:* Authorization_Key  (Use [/authentication/authorize](#/authentication/AuthenticationLogin) to obtain an API Key)  # Data Interchange Format  For the most part (and where not otherwise explicit) turboSMTP’s API uses JSON as the data format of choice when it comes to request and response bodies.       

    The version of the OpenAPI document: 2.0.0-oas3
    Contact: api@turbo-smtp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from API_TurboSMTP.api.authentication_api import AuthenticationApi


class TestAuthenticationApi(unittest.TestCase):
    """AuthenticationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AuthenticationApi()

    def tearDown(self) -> None:
        pass

    def test_authentication_login(self) -> None:
        """Test case for authentication_login

        Login - Get API Key
        """
        pass

    def test_authentication_logout(self) -> None:
        """Test case for authentication_logout

        Logout - Revoke API Key
        """
        pass

    def test_change_password(self) -> None:
        """Test case for change_password

        Change turboSMTP password
        """
        pass

    def test_check_validity_token_reset_password(self) -> None:
        """Test case for check_validity_token_reset_password

        Forgot Password - Verify if Secret Passord Recovery token is valid.
        """
        pass

    def test_send_secret_token_reset_password(self) -> None:
        """Test case for send_secret_token_reset_password

        Forgot Password - Use in case you don´t remember your turboSMTP password
        """
        pass

    def test_update_reset_password(self) -> None:
        """Test case for update_reset_password

        Forgot Password - change password
        """
        pass


if __name__ == '__main__':
    unittest.main()
