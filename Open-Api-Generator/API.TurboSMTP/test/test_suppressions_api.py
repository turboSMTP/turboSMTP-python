# coding: utf-8

"""
    TurboSMTP Public APIs

    This document describes all public turboSMTP **V2** API and offers endpoints Descriptions, Parameters, Requests, Responses and Samples of usage.  [Click here to view the previous version of turboSMTP Public API Version 1.0](https://www.serversmtp.com/turbo-api-1)   # Security For the most part (and where not otherwise explicit) turboSMTP’s API requires Authorization.   Authorization to access a user’s resource is granted to clients provided they set  authentication headers into their request, valued with the proper values issued by turboSMTP servers.  ## *  Authorization via ConsumerKey/ConsumerSecret  This type of authorization consists of a pair of headers, named consumerKey and consumerSecret that are created and granted to the end user to be used in a permanent way (unless they´re deleted of course). This kind of authentication is intended to provide access to endpoints features without the need of providing the user the account details (email address + password).  *consumerKey:* Consumer Key Granted.  *consumerSecret:* Consumer Secret Granted.  (Use [/consumerKeys/create](#/consumerkey/createConsumerKey) create a consumer key/secret pair).      ## *  Authorization via Authentication Key  The authentication key is user-based and it is issued by turboSMTP servers upon successful user’s email address + password challenge, performed by means of appropriate request.      *Authorization:* Authorization_Key  (Use [/authentication/authorize](#/authentication/AuthenticationLogin) to obtain an API Key)  # Data Interchange Format  For the most part (and where not otherwise explicit) turboSMTP’s API uses JSON as the data format of choice when it comes to request and response bodies.       

    The version of the OpenAPI document: 2.0.0-oas3
    Contact: api@turbo-smtp.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from API_TurboSMTP.api.suppressions_api import SuppressionsApi


class TestSuppressionsApi(unittest.TestCase):
    """SuppressionsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SuppressionsApi()

    def tearDown(self) -> None:
        pass

    def test_bulk_delete_suppressions(self) -> None:
        """Test case for bulk_delete_suppressions

        Bulk delete suppressions
        """
        pass

    def test_delete_filter_suppressions(self) -> None:
        """Test case for delete_filter_suppressions

        Delete suppressions
        """
        pass

    def test_export_filter_suppressions(self) -> None:
        """Test case for export_filter_suppressions

        Export filtered suppressions
        """
        pass

    def test_export_suppressions_data_csv(self) -> None:
        """Test case for export_suppressions_data_csv

        Export Suppressions data in CSV file
        """
        pass

    def test_filter_suppressions(self) -> None:
        """Test case for filter_suppressions

        Filter suppressions
        """
        pass

    def test_get_suppressions(self) -> None:
        """Test case for get_suppressions

        Get Suppressions Data
        """
        pass

    def test_import_suppressions(self) -> None:
        """Test case for import_suppressions

        Import Suppressions
        """
        pass


if __name__ == '__main__':
    unittest.main()
